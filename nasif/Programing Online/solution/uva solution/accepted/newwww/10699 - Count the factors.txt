//uva
//10699 - Count the factors
//xplosive
//ac

#include <iostream>
#include <cstdio>
#include <cstring>
#include <vector>

using namespace std;

bool is_prime(int n)
{
    if(n<=1)
        return false;
    if(n==2)
        return true;
    if(n%2==0)
        return false;

    int d;

    //int l=sqrt(n);
    //for (d=3;d<=l; d+=2)
    for (d=3; d*d<=n; d+=2)     //this is faster
    {
        if(n%d==0)
            return false;
    }

    return true;

}


vector <int> get_store_prime(int r)
{
//this will return a int vector with stored prime number
//upto r using is_prime

    vector <int> prime;
    prime.push_back(2);

    for(int i=3; i<r; i+=2)
    {
        if(is_prime(i))
            prime.push_back(i);
    }

    return prime;

}


int main()
{

    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);

    vector <int> prime;
    prime = get_store_prime(1000000);
    int l= prime.size();

    int i,j,k,n;

    while(cin >> n)
    {
        if(!n)
            break;
        k=0;
        for(i=0; i<l; i++)
        {
            j = prime[i];

            if(n%j==0)
            {
                k++;
            }
        }
        cout << n << " : " << k << endl;

    }


    return 0;

}



/*

Sample Input

289384
930887
692778
636916
747794
238336
885387
760493
516650
641422
0

Sample Output

289384 : 3
930887 : 2
692778 : 5
636916 : 4
747794 : 3
238336 : 3
885387 : 2
760493 : 2
516650 : 3
641422 : 3



*/
