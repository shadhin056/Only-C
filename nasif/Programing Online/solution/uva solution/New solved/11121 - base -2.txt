//nt
//11121 - base -2
//Xplosive
//ac

//neg base conversation......note it, print cal

#include <iostream>
#include <string>
#include <sstream>
#include <algorithm>
#include <vector>
#include <set>
#include <queue>
#include <stack>
#include <list>
#include <map>
#include <fstream>
#include <numeric>
#include <iterator>
#include <bitset>
#include <utility>
#include <cstdio>
#include <cstdlib>
#include <cctype>
#include <cmath>
#include <cstring>
#include <ctime>
#include <iomanip>
//#include <conio.h>    //this will give u compile error in contest

#define READ(file) freopen(file, "r", stdin);
#define WRITE(file) freopen(file, "w", stdout);
#define PI acos(-1.0)


#define MAX 1100000

using namespace std;

void print_vector(vector<int> v);
void print_vector(vector<char> v);
void print_array(int* a, int l);


vector <int> decToBaseNegTwo(long n)
{
    vector <int> v;
    if(n==0)
    {
        v.push_back(0);
        return v;
    }


    while(n)
    {
        int d = abs(n%2);
        //cout << "n= " << n << setw(10) << " d= " << d <<endl;;
        v.push_back(d);
        if(d==0)
        {
            n=n/(-2);
        }
        else
        {
            n = (n-1)/(-2);
        }
        //getch();
    }
    reverse(v.begin(),v.end());
    return v;
}


int main()
{
    //READ("input.txt");
    //WRITE("output.txt");

    int t, tt;

    cin >> tt;

    vector <int> v;
    int n;

    for(int i=1; i<=tt; i++)
    {
        cin >> n;

        v = decToBaseNegTwo(n);

        cout << "Case #" << i << ": ";
        print_vector(v);
        v.clear();
    }


    return 0;
}

void print_array(int* a, int l)
{
    for(int i= 0; i<l; i++)
        cout << a[i] << " ";

    cout << endl;
}

void print_vector(vector<int> v)
{
    for(int i=0; i<v.size(); i++)
        cout << v[i] << "";

    cout << endl;
}

void print_vector(vector<char> v)
{
    for(int i=0; i<v.size(); i++)
        cout << v[i] << " ";

    cout << endl;
}




/*


Sample input

4
1
7
-2
0

Sample output

Case #1: 1
Case #2: 11011
Case #3: 10
Case #4: 0

*/
