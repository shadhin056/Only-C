//stl
//673 - Parentheses Balance
//Xplosive
//ns

#include <iostream>
#include <string>
#include <sstream>
#include <algorithm>
#include <vector>
#include <set>
#include <queue>
#include <stack>
#include <list>
#include <map>
#include <fstream>
#include <numeric>
#include <iterator>
#include <bitset>
#include <utility>
#include <cstdio>
#include <cstdlib>
#include <cctype>
#include <cmath>
#include <cstring>
#include <ctime>

#define READ(file) freopen(file, "r", stdin);
#define WRITE(file) freopen(file, "w", stdout);
#define PI acos(-1.0)


#define MAX 1100000

using namespace std;

void print_vector(vector<int> v);
void print_vector(vector<char> v);
void print_array(int* a, int l);


bool isPair(char a, char b)
{
    if(a=='(' && b==')')
        return true;
    if(a=='{' && b=='}')
        return true;
    if(a=='[' && b==']')
        return true;

    return false;
}

bool isValid(string s)
{
    stack<char>st;
    bool flag = false;

    int l = s.size();
    for(int i=0; i<l; i++)
    {
        if(s[i]==')' || s[i]=='}' || s[i]==']')
        {
            if(st.empty())
            {
                flag=true;
                break;
            }
            if(isPair(st.top(),s[i]))
            {
                st.pop();
            }
            else
            {
                flag=true;
                break;
            }
        }
        else if(s[i]=='(' || s[i]=='{' || s[i]=='[')
        {
            st.push(s[i]);
        }


    }
    //print_stack(st);

    if(st.empty()&&flag==false)
    {
        return true;
    }
    else
    {
        return false;
    }


}

int main()
{
    //READ("input.txt");
    //WRITE("output.txt");

    int t,tt;
    cin >> tt;
    char ch = getchar();

    while(tt--)
    {
        string s;
        getline(cin,s);

        if(isValid(s))
        {
            cout << "Yes" << endl;
        }
        else
        {
            cout << "No" << endl;
        }

    }


    return 0;
}

void print_array(int* a, int l)
{
    for(int i= 0; i<l; i++)
        cout << a[i] << " ";

    cout << endl;
}

void print_vector(vector<int> v)
{
    for(int i=0; i<v.size(); i++)
        cout << v[i] << " ";

    cout << endl;
}

void print_vector(vector<char> v)
{
    for(int i=0; i<v.size(); i++)
        cout << v[i] << " ";

    cout << endl;
}



/*

Sample input

3
([])
(([()])))
([()[]()])()


Sample output

Yes
No
Yes



*/
