//prefix postfix
//mid1 - max diff- insertion sort- file
//final
//Nasif Ahmed (2013-1-60-052)
//get some int as input from a file

#include<cstdio>
#include<iostream>
#include <cstdlib>
#include <cmath>
#include <cstring>
#define MAX 100

using namespace std;

void printArray(int*, int);
void sortAscending(int*, int);
void deleteFromAPosition(int*, int, int);
void shiftToRightFromAPosition(int*, int, int);

int diff[MAX],dal;


int getValue(int* a, int l, int p, int q)
{
    int maxDiff=0,d;
    int c=0;

    for(int i=p; i<q; i++)
    {
        int cValue=a[i];


        for(int j=i+i; j<=q; j++)
        {
            d=abs(cValue-a[j]);
            diff[c++]=d;

            if(d>maxDiff)
            {
                maxDiff=d;
            }

        }

    }
    dal=c;


    return maxDiff;
}





int main()
{
//    freopen("input.txt","r",stdin);
//    freopen("output.txt","w",stdout);

    //int a[MAX];
    int a[MAX]= {10,6,3,7,9,4,36};
    int l=7;
    int p=1,q=6;

    //p=1,q=6;

    FILE *infile, *outfile, *outfile2;
    infile = fopen("input.txt","r");
    outfile = fopen("output.txt","w");
    outfile2 = fopen("output2.txt","w");
    //outfile = fopen("output.txt","a");

    int i=0;
    int n;
    //fscanf(infile, "%lf", &n);
    while(fscanf(infile, "%d", &n)!=EOF)
    {
        //cout << n << endl;
        a[i++]=n;

    }
    l=i;


//    cout << "Enter P: ";
//    cin >> p;
//
//    cout << "Enter Q: ";
//    cin >> q;

    while(1)
    {
        cout << "Enter P: ";
        cin >> p;

        if(p<0)
        {
            cout << "Wrong Input!!\nEnter Again"<< endl;
        }
        else
        {
            break;
        }
    }

    while(1)
    {
        cout << "Enter Q: ";
        cin >> q;

        if(q>=l)
        {
            cout << "Wrong Input!!\nEnter Again"<< endl;
        }
        else
        {
            break;
        }
    }



    int r = getValue(a,l,p,q);
    cout << r << endl;
    //fprintf(outfile, "%d\n", r);

    for(int i=0; i<dal; i++)
    {
        fprintf(outfile, "%d ", diff[i]);

    }
    //fprintf(outfile, "\n");

    fclose(infile);
    fclose(outfile);

    sortAscending(diff,dal);
    printArray(diff,dal);

    for(int i=0; i<dal; i++)
    {
        fprintf(outfile2, "%d ", diff[i]);
    }

}


void sortAscending(int* a, int l)
{
    //way left to right
    int key;
    for(int i=0; i<l-1; i++)
    {
        if(a[i+1]<a[i])
        {
            key = a[i+1];

            deleteFromAPosition(a,l,i+1);
            //printArray(a,l);

            for(int j=0; j<l; j++)
            {
                if(a[j]>=key)
                {
                    shiftToRightFromAPosition(a,l,j);
//                    cout << "after shift: ";
//                    printArray(a,l);
                    a[j]=key;
                    break;

                }
            }

//            cout << "testing : ";
//            printArray(a,l);

        }

//        cout << "testing : ";
//        printArray(a,l);

    }




}

void deleteFromAPosition(int* a, int l, int pos)
{
    for(int i=pos; i<l-1; i++)
    {
        a[i]= a[i+1];
    }

}

void shiftToRightFromAPosition(int* a, int l, int pos)
{
    for(int i=l-1; i>pos; i--)
    {
        a[i]= a[i-1];
    }
}


void printArray(int* a, int l)
{
    for(int i=0; i<l; i++)
    {
        cout << a[i] << " ";
    }
    cout << endl;
}
